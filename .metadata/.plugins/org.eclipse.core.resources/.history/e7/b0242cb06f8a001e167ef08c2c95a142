/*
 * scheduler.h
 *
 *  Created on: Nov 24, 2023
 *      Author: thao2
 */

#ifndef INC_SCHEDULER_H_
#define INC_SCHEDULER_H_


// typedef of sTask
typedef struct {
	// Pointer to task (must be a 'void (void)' function)
	void (*pTask)(void);
	// Delay (ticks) until the function will (next) be run
	uint32_t Delay;
	// Interval (ticks) between subsequent runs.
	uint32_t Period;
	// Incremented (by scheduler) when task is due to execute
	uint8_t RunMe;
	// This is a hint to solve the question below.
	uint32_t TaskID;
} sTask;

// define some constant
// MUST BE ADJUSTED FOR EACH NEW PROJECT
#define SCH_MAX_TASKS	40
#define NO_TASK__ID		0


// declaration function
void SCH_Init(void);





























#endif /* INC_SCHEDULER_H_ */
